version: '3.9'

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - ./selfsigned.crt:/etc/ssl/certs/selfsigned.crt
      - ./selfsigned.key:/etc/ssl/private/selfsigned.key
    command:
      - --api.dashboard=true
      - --log.level=INFO
      - --accesslog=true
      - --providers.docker.network=proxy
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      # Remove the redirection command options
      # - --entrypoints.web.http.redirections.entrypoint.to=websecure
      # - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --certificatesresolvers.myresolver.acme.email=marcelo.gdomingues@outlook.com
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`traefik.example.com`)
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/

  whoami:
    image: traefik/whoami:v1.10
    container_name: whoami
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.mywhoami.rule=Host(`whoami.example.com`) || Host(`www.whoami.example.com`)
      - traefik.http.services.mywhoami.loadbalancer.server.port=80
      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.mywhoami.middlewares=mywwwredirect

  web1:
    image: nginx
    container_name: web1
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.web1.rule=Host(`web1.example.com`)
      - traefik.http.services.web1.loadbalancer.server.port=80

  web2:
    image: nginx
    container_name: web2
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.web2.rule=Host(`web2.example.com`)
      - traefik.http.services.web2.loadbalancer.server.port=80

  web3:
    image: nginx
    container_name: web3
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.web3.rule=Host(`web3.example.com`)
      - traefik.http.services.web3.loadbalancer.server.port=80

networks:
  proxy:
    name: proxy

volumes:
  letsencrypt:
    name: letsencrypt